1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT * 
FROM students 
JOIN degrees
ON degrees.id = students.degree_id
WHERE degrees.name = 'Corso di Laurea in Economia';


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze

SELECT * 
FROM departments 
JOIN degrees
ON departments.id = degrees.department_id
WHERE departments.name = 'Dipartimento di Neuroscienze' AND degrees.level= "magistrale";



3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT teachers.name, teachers.surname, courses.name AS corso  
FROM teachers 
JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
JOIN courses
ON courses.id = course_teacher.course_id
WHERE teachers.id = 44;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

SELECT students.name, students.surname, departments.name, degrees.name, degrees.level
FROM students
JOIN degrees
ON students.degree_id = degrees.id
JOIN departments
ON departments.id = degrees.department_id 
ORDER BY students.surname ASC;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT teachers.name, teachers.surname, courses.name, courses.description, courses.period
FROM courses
JOIN course_teacher
ON courses.id = course_teacher.course_id
JOIN teachers
ON teachers.id = course_teacher.teacher_id


6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

SELECT teachers.name, teachers.surname, departments.name
FROM teachers
JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
JOIN courses
ON courses.id = course_teacher.course_id
JOIN degrees
ON degrees.id = courses.degree_id
JOIN departments
ON departments.id = degrees.department_id
WHERE departments.name = 'Dipartimento di Matematica'
GROUP BY teachers.id;


7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.

SELECT students.surname, students.name, courses.id, COUNT(exam_student.vote + 1) AS n_intents
FROM students
INNER JOIN exam_student
ON students.id = exam_student.student_id
INNER JOIN exams
ON exam_student.exam_id = exams.id
INNER JOIN courses 
ON exams.course_id = courses.id
WHERE exam_student.vote < 18
GROUP BY students.surname, students.name, courses.id;